<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Warren&#39;s Blog</title>
    <link>https://wurbina.com/posts/</link>
    <description>Recent content in Posts on Warren&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Feb 2018 21:44:04 -0800</lastBuildDate>
    
	<atom:link href="https://wurbina.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React Native Install</title>
      <link>https://wurbina.com/posts/react/react-native-install/</link>
      <pubDate>Sat, 10 Feb 2018 21:44:04 -0800</pubDate>
      
      <guid>https://wurbina.com/posts/react/react-native-install/</guid>
      <description>This post will cover React Native, and how to get started.
What is React Native? It is a javascript framework that allows you to write mobile applications with Javascript. The JS code you write will be converted to become native code on iOS/Android. Mobile devices create an environment that will interpret the javascript in a React style. So For example, when using a  component within your React-Native app, upon loading,  will resolve to UIView on iOS and on Android, android.</description>
    </item>
    
    <item>
      <title>Collected Thoughts on React</title>
      <link>https://wurbina.com/posts/react/2017-05-23-collected-thoughts-on-react/</link>
      <pubDate>Tue, 23 May 2017 22:00:42 -0800</pubDate>
      
      <guid>https://wurbina.com/posts/react/2017-05-23-collected-thoughts-on-react/</guid>
      <description>Recently I have picked up a course from Udemy on React &amp;amp; Redux. I currently am working on making components similar to YouTube&amp;rsquo;s app. It is a YouTube video search app.
This project can be found here: React YouTube Project
This involves 5 components, 2 Functional React components, and 3 Class based components. This app pulls videos from YouTube using their API. There is a search bar component that will update a state and call the YouTube search api to look for videos matching the search criteria.</description>
    </item>
    
    <item>
      <title>Isolation Tank</title>
      <link>https://wurbina.com/posts/life/2017-01-29-isolation-tank/</link>
      <pubDate>Sun, 29 Jan 2017 18:30:42 -0800</pubDate>
      
      <guid>https://wurbina.com/posts/life/2017-01-29-isolation-tank/</guid>
      <description>Today I went into a sensory deprivation isolation tank.
It was a great and relaxing experience. I recommend it.
I went with my brother. We walked in and signed a paper basically saying &amp;lsquo;you can&amp;rsquo;t sue us&amp;rsquo;.
There was a notebook on the table where others could write out their experiences of their floats. People drew and wrote funny things about their floats. One of my favorites was: &amp;ldquo;Death is no longer a fear.</description>
    </item>
    
    <item>
      <title>Django Shell Plus Imports</title>
      <link>https://wurbina.com/posts/django/2017-01-25-django-shellplus/</link>
      <pubDate>Wed, 25 Jan 2017 20:19:42 -0800</pubDate>
      
      <guid>https://wurbina.com/posts/django/2017-01-25-django-shellplus/</guid>
      <description>The topic of this blog is about controlling import order resolution when using the django extension, shell_plus: http://django-extensions.readthedocs.io/en/latest/shell_plus.html
Shell plus is an interactive python shell that will load in your apps DB models:
django python manage.py shell_plus When you do this, by default, all of your app&amp;rsquo;s models will be imported. But, there is a way you can control which models get imported, and the order in which they do. For example: If you want to preimport a model/module before the shell plus imports, you should add the following to your configuration file in your django project:</description>
    </item>
    
  </channel>
</rss>